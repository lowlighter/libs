{
  "icon": "ðŸ¦•",
  "name": "@libs/std",
  "version": "2024.7.23",
  "versioning": "date",
  "description": "All-in-one mirror of Deno's Standard Library.",
  "keywords": [
    "deno",
    "std",
    "esm"
  ],
  "license": "MIT",
  "author": "lowlighter (Simon Lecoq)",
  "funding": "https://github.com/sponsors/lowlighter",
  "homepage": "https://github.com/lowlighter/libs",
  "supported": [
    "deno"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lowlighter/libs.git"
  },
  "exports": {},
  "imports": {},
  "test:doc": false,
  "tasks": {
    "build": "deno run --allow-read --allow-net=jsr.io,api.jsr.io --allow-write --allow-run=deno jsr:@libs/bundle/ts/cli/mirror --scope std --packages-exclude internal --config deno.jsonc --mod --patches patches.yml && deno fmt",
    "test": "deno test --allow-run=deno,node,bun,npx --no-prompt --coverage --clean --trace-leaks ",
    "test:deno": "deno fmt --check && deno task test --filter='/^\\[deno\\]/' --quiet && deno coverage --exclude=.js && deno lint",
    "test:deno-future": "DENO_FUTURE=1 && deno task test:deno",
    "test:others": "deno fmt --check && deno task test --filter='/^\\[node|bun \\]/' --quiet && deno coverage --exclude=.js && deno lint",
    "coverage:html": "deno task test --filter='/^\\[deno\\]/' --quiet && deno coverage --exclude=.js --html && sleep 1",
    "dev": "deno fmt && deno task test --filter='/^\\[deno\\]/' && deno coverage --exclude=.js --detailed && deno task lint",
    "lint": "deno fmt --check && deno lint && deno doc --lint mod.ts && deno publish --dry-run --quiet --allow-dirty"
  },
  "lint": {
    "rules": {
      "include": [
        "no-throw-literal",
        "no-eval",
        "eqeqeq",
        "ban-untagged-todo"
      ]
    },
    "exclude": [
      "**/wasm_*",
      "**/*.mjs"
    ]
  },
  "fmt": {
    "lineWidth": 280,
    "semiColons": false,
    "exclude": [
      "coverage",
      "**/coverage",
      "**/node_modules",
      "**/package.json",
      "**/package-lock.json",
      "**/wasm_*",
      "**/*.mjs"
    ],
    "proseWrap": "preserve"
  }
}
