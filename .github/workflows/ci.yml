name: Continuous Integration
on:
  push:
    branches: main
  pull_request:
    branches: main
    paths-ignore:
      - '**/*.md'
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
      - name: List packages
        id: packages
        run: |
          echo "packages=$(deno eval 'console.log(JSON.stringify([...Deno.readDirSync(`.`)].filter(({name}) => { try { return Deno.openSync(`${name}/deno.jsonc`) } catch { return false } }).map(({name}) => name)))')" >> $GITHUB_OUTPUT

  package:
    name: Package
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.setup.outputs.packages) }}
    permissions:
      id-token: write
      contents: write
      packages: write
      security-events: write
    uses: lowlighter/libs/.github/workflows/ci_package.yml@main
    with:
      package: ${{ matrix.package }}
      publish: ${{ github.event_name == 'push' }}

  coverage:
    name: Coverage
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs:
      - setup
      - package
    environment:
      name: github-pages
      url: ${{ steps.pages.outputs.page_url }}
    permissions:
      id-token: write
      pages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - uses: actions/configure-pages@v5
      - uses: denoland/setup-deno@v1
      - name: Run deno task coverage
        run: |
          PACKAGES=$(echo '${{ needs.setup.outputs.packages }}' | jq -cr '.[]')
          mkdir -p coverage
          for PACKAGE in $PACKAGES; do
            pushd $PACKAGE
            deno task ci:coverage
            popd
          done
          mv coverage _site
      - uses: actions/upload-pages-artifact@v3
      - id: pages
        uses: actions/deploy-pages@v4

  codeql:
    name: Code quality
    runs-on: ubuntu-latest
    needs: package
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - uses: github/codeql-action/init@v3
        with:
          languages: typescript
      - uses: github/codeql-action/analyze@v3
