{
  "name": "@lowlighter/libs",
  "version": "0.0.0",
  "description": "Collection of carefully crafted TypeScript standalone libraries. Minimal, unbloated, convenient.",
  "license": "MIT",
  "author": "lowlighter (Simon Lecoq)",
  "funding": "https://github.com/sponsors/lowlighter",
  "homepage": "https://github.com/lowlighter/libs",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lowlighter/libs.git"
  },
  "exports": {},
  "lock": false,
  "imports": {
    "@std/jsonc": "jsr:@std/jsonc@1",
    "@std/yaml": "jsr:@std/yaml@1",
    "@std/fs": "jsr:@std/fs@1",
    "@std/fs/expand-glob": "jsr:@std/fs@1/expand-glob",
    "@std/fs/exists": "jsr:@std/fs@1/exists",
    "@std/path": "jsr:@std/path@1",
    "@std/path/basename": "jsr:@std/path@1/basename",
    "@std/path/from-file-url": "jsr:@std/path@1/from-file-url",
    "@std/async/debounce": "jsr:@std/async@1/debounce",
    "@std/async/delay": "jsr:@std/async@1/delay",
    "@std/async/retry": "jsr:@std/async@1/retry",
    "@std/http/status": "jsr:@std/http@1/status",
    "@std/streams": "jsr:@std/streams@1",
    "@std/io": "jsr:@std/io@0.224.6",
    "@std/archive/untar": "jsr:@std/archive@0.225.0/untar",
    "@std/encoding/base32": "jsr:@std/encoding@1/base32",
    "@std/encoding/base64": "jsr:@std/encoding@1/base64",
    "@std/text/to-camel-case": "jsr:@std/text@1/to-camel-case",
    "@std/text/to-pascal-case": "jsr:@std/text@1/to-pascal-case",
    "@std/collections/deep-merge": "jsr:@std/collections@1/deep-merge",
    "@std/ulid": "jsr:@std/ulid@1",
    "@std/cli": "jsr:@std/cli@1",
    "@std/fmt/colors": "jsr:@std/fmt@1/colors",
    "@std/semver": "jsr:@std/semver@1",
    "@std/assert": "jsr:@std/assert@1",
    "@std/expect": "jsr:@std/expect@1",
    "@libs/logger": "jsr:@libs/logger@2",
    "@libs/testing": "jsr:@libs/testing@2",
    "@libs/typing": "jsr:@libs/typing@2",
    "@libs/xml": "jsr:@libs/xml@5",
    "@libs/run": "jsr:@libs/run@2",
    "@deno-libs/gql": "jsr:@deno-libs/gql@3",
    "@cliffy/table": "jsr:@cliffy/table@1.0.0-rc.5",
    "@b-fuze/deno-dom": "jsr:@b-fuze/deno-dom@0.1.47",
    "@deno/doc": "jsr:@deno/doc@0.146.0",
    "@luca/esbuild-deno-loader": "jsr:@luca/esbuild-deno-loader@0.10.3",
    "octokit": "npm:octokit@4",
    "highlight.js": "npm:highlight.js@11",
    "@graphql-tools/schema": "npm:@graphql-tools/schema@10",
    "@graphql-tools/utils": "npm:@graphql-tools/utils@10",
    "@graphql-tools/merge": "npm:@graphql-tools/merge@9",
    "graphql-tag": "npm:graphql-tag@2",
    "zod": "npm:zod@3",
    "zod-error": "npm:zod-error@1",
    "zod-to-json-schema": "npm:zod-to-json-schema@3",
    "@mdn/browser-compat-data": "npm:@mdn/browser-compat-data@5",
    "browserslist": "npm:browserslist@4",
    "esbuild": "npm:esbuild@0.23.1",
    "terser": "npm:terser@5",
    "css-tree": "npm:css-tree@2",
    "csso": "npm:csso@5",
    "stylelint": "npm:stylelint@16",
    "stylelint-order": "npm:stylelint-order@6",
    "stylelint-config-recommended": "npm:stylelint-config-recommended@14",
    "stylelint-config-idiomatic-order": "npm:stylelint-config-idiomatic-order@10",
    "bun:test": "./_stub.ts",
    "node:test": "./_stub.ts"
  },
  "tasks": {
    "make:readme": "deno run --allow-env=LOG_LEVEL --allow-read=. --allow-write=README.md .github/deno_readme.ts && deno fmt README.md",
    "make:config": "deno run --allow-env=LOG_LEVEL,UPGRADE_PACKAGES --allow-read=. --allow-write=. .github/deno_config.ts",
    "make:config-upgrade": "UPGRADE_PACKAGES=true deno task make:config",
    "tag": "deno run --allow-read --allow-write=. .github/deno_tag.ts",
    "test": "cd bundle && deno task test:deno && cd .. && cd crypto && deno task test:deno && cd .. && cd diff && deno task test:deno && cd .. && cd dom && deno task test:deno && cd .. && cd logger && deno task test:deno && cd .. && cd orm && deno task test:deno && cd .. && cd qrcode && deno task test:deno && cd .. && cd reactive && deno task test:deno && cd .. && cd run && deno task test:deno && cd .. && cd std && deno task test:deno && cd .. && cd testing && deno task test:deno && cd .. && cd typing && deno task test:deno && cd .. && cd xml && deno task test:deno && cd ..",
    "lint": "cd bundle && deno task lint && cd .. && cd crypto && deno task lint && cd .. && cd diff && deno task lint && cd .. && cd dom && deno task lint && cd .. && cd logger && deno task lint && cd .. && cd orm && deno task lint && cd .. && cd qrcode && deno task lint && cd .. && cd reactive && deno task lint && cd .. && cd run && deno task lint && cd .. && cd std && deno task lint && cd .. && cd testing && deno task lint && cd .. && cd typing && deno task lint && cd .. && cd xml && deno task lint && cd ..",
    "coverage": "rm -rf coverage && mkdir -p coverage && cd bundle && deno task coverage:html && mv coverage/html ../coverage/bundle && cd .. && cd crypto && deno task coverage:html && mv coverage/html ../coverage/crypto && cd .. && cd diff && deno task coverage:html && mv coverage/html ../coverage/diff && cd .. && cd dom && deno task coverage:html && mv coverage/html ../coverage/dom && cd .. && cd logger && deno task coverage:html && mv coverage/html ../coverage/logger && cd .. && cd orm && deno task coverage:html && mv coverage/html ../coverage/orm && cd .. && cd qrcode && deno task coverage:html && mv coverage/html ../coverage/qrcode && cd .. && cd reactive && deno task coverage:html && mv coverage/html ../coverage/reactive && cd .. && cd run && deno task coverage:html && mv coverage/html ../coverage/run && cd .. && cd std && deno task coverage:html && mv coverage/html ../coverage/std && cd .. && cd testing && deno task coverage:html && mv coverage/html ../coverage/testing && cd .. && cd typing && deno task coverage:html && mv coverage/html ../coverage/typing && cd .. && cd xml && deno task coverage:html && mv coverage/html ../coverage/xml && cd .."
  },
  "lint": {
    "rules": {
      "include": [
        "no-throw-literal",
        "no-eval",
        "eqeqeq",
        "ban-untagged-todo"
      ]
    },
    "exclude": [
      "**/wasm_*",
      "**/*.mjs"
    ]
  },
  "fmt": {
    "lineWidth": 280,
    "semiColons": false,
    "exclude": [
      "coverage",
      "**/coverage",
      "**/node_modules",
      "**/package.json",
      "**/package-lock.json",
      "**/wasm_*",
      "**/*.mjs"
    ],
    "proseWrap": "preserve"
  }
}
