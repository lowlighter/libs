{
  "name": "@lowlighter/libs",
  "description": "Collection of carefully crafted TypeScript standalone libraries. Minimal, unbloated, convenient.",
  "author": "lowlighter (Simon Lecoq)",
  "repository": "https://github.com/lowlighter/libs",
  "license": "MIT License",
  "tasks": {
    "config": "deno run --allow-read=. --allow-write=. .github/deno_config.ts && deno fmt",
    "readme": "deno run --allow-read=. --allow-write=README.md .github/deno_readme.ts",
    "tag": "deno run --allow-read --allow-write=. .github/deno_tag.ts",
    "ci": "deno task bundle:ci && deno task crypto:ci && deno task diff:ci && deno task logger:ci && deno task orm:ci && deno task qrcode:ci && deno task reactive:ci && deno task testing:ci && deno task typing:ci && deno task xml:ci",
    "coverage": "rm coverage -rf && mkdir -p coverage && deno task bundle:coverage && deno task crypto:coverage && deno task diff:coverage && deno task logger:coverage && deno task orm:coverage && deno task qrcode:coverage && deno task reactive:coverage && deno task testing:coverage && deno task typing:coverage && deno task xml:coverage && deno task coverage:pretty",
    "coverage:pretty": "deno run --allow-read --allow-write=coverage --allow-net bundle/ts/cli/coverage.ts \"coverage/**/*.html\"",
    "bundle:ci": "cd bundle && deno task ci",
    "bundle:coverage": "cd bundle && deno task coverage --html && sleep 1 && rm -rf ../coverage/bundle && mv coverage/html ../coverage/bundle",
    "bundle:publish": "cd bundle && deno publish",
    "crypto:ci": "cd crypto && deno task ci",
    "crypto:coverage": "cd crypto && deno task coverage --html && sleep 1 && rm -rf ../coverage/crypto && mv coverage/html ../coverage/crypto",
    "crypto:publish": "cd crypto && deno publish",
    "diff:ci": "cd diff && deno task ci",
    "diff:coverage": "cd diff && deno task coverage --html && sleep 1 && rm -rf ../coverage/diff && mv coverage/html ../coverage/diff",
    "diff:publish": "cd diff && deno publish",
    "logger:ci": "cd logger && deno task ci",
    "logger:coverage": "cd logger && deno task coverage --html && sleep 1 && rm -rf ../coverage/logger && mv coverage/html ../coverage/logger",
    "logger:publish": "cd logger && deno publish",
    "orm:ci": "cd orm && deno task ci",
    "orm:coverage": "cd orm && deno task coverage --html && sleep 1 && rm -rf ../coverage/orm && mv coverage/html ../coverage/orm",
    "orm:publish": "cd orm && deno publish",
    "qrcode:ci": "cd qrcode && deno task ci",
    "qrcode:coverage": "cd qrcode && deno task coverage --html && sleep 1 && rm -rf ../coverage/qrcode && mv coverage/html ../coverage/qrcode",
    "qrcode:publish": "cd qrcode && deno publish",
    "reactive:ci": "cd reactive && deno task ci",
    "reactive:coverage": "cd reactive && deno task coverage --html && sleep 1 && rm -rf ../coverage/reactive && mv coverage/html ../coverage/reactive",
    "reactive:publish": "cd reactive && deno publish",
    "testing:ci": "cd testing && deno task ci",
    "testing:coverage": "cd testing && deno task coverage --html && sleep 1 && rm -rf ../coverage/testing && mv coverage/html ../coverage/testing",
    "testing:publish": "cd testing && deno publish",
    "typing:ci": "cd typing && deno task ci",
    "typing:coverage": "cd typing && deno task coverage --html && sleep 1 && rm -rf ../coverage/typing && mv coverage/html ../coverage/typing",
    "typing:publish": "cd typing && deno publish",
    "xml:ci": "cd xml && deno task ci",
    "xml:coverage": "cd xml && deno task coverage --html && sleep 1 && rm -rf ../coverage/xml && mv coverage/html ../coverage/xml",
    "xml:publish": "cd xml && deno publish"
  },
  "lint": {
    "rules": {
      "include": [
        "no-throw-literal",
        "no-eval",
        "eqeqeq",
        "ban-untagged-todo"
      ]
    },
    "exclude": [
      "**/wasm_xml_parser"
    ]
  },
  "fmt": {
    "lineWidth": 280,
    "semiColons": false,
    "exclude": [
      "coverage",
      "**/coverage",
      "**/node_modules",
      "**/wasm_xml_parser"
    ]
  },
  "imports": {
    "@std/jsonc": "jsr:@std/jsonc@0.224.0",
    "@std/fs": "jsr:@std/fs@0.229.1",
    "@std/assert": "jsr:@std/assert@0.225.2",
    "@std/semver": "jsr:@std/semver@0.224.0",
    "@std/path": "jsr:@std/path@0.225.1",
    "@std/encoding/base32": "jsr:@std/encoding@0.224.1/base32",
    "@std/encoding/base64": "jsr:@std/encoding@0.224.1/base64",
    "@std/io": "jsr:@std/io@0.224.0",
    "@std/archive/untar": "jsr:@std/archive@0.224.0/untar",
    "@std/cli": "jsr:@std/cli@0.224.2",
    "@std/fmt/colors": "jsr:@std/fmt@0.225.1/colors",
    "@libs/logger": "jsr:@libs/logger@1",
    "@libs/testing": "jsr:@libs/testing@1",
    "@libs/typing": "jsr:@libs/typing@2",
    "@libs/xml": "jsr:@libs/xml@5",
    "@cliffy/table": "jsr:@cliffy/table@1.0.0-rc.4",
    "@mdn/browser-compat-data": "npm:@mdn/browser-compat-data@5",
    "@deno/emit": "jsr:@deno/emit@0.40",
    "@lowlighter/deno-dom/deno-dom-wasm": "jsr:@lowlighter/deno-dom@0.1.46-rc1/deno-dom-wasm",
    "terser": "npm:terser@5",
    "browserslist": "npm:browserslist@4",
    "css-tree": "npm:css-tree@2",
    "csso": "npm:csso@5",
    "stylelint": "npm:stylelint@16",
    "stylelint-order": "npm:stylelint-order@6",
    "stylelint-config-recommended": "npm:stylelint-config-recommended@14",
    "stylelint-config-idiomatic-order": "npm:stylelint-config-idiomatic-order@10",
    "@std/path/basename": "jsr:@std/path@0.225.1/basename",
    "@std/collections/deep-merge": "jsr:@std/collections@0.224.0/deep-merge",
    "@std/expect": "jsr:@std/expect@0.224.0",
    "@std/path/from-file-url": "jsr:@std/path@0.225.1/from-file-url",
    "bun:test": "./_stub.ts",
    "@std/fs/expand-glob": "jsr:@std/fs@0.229.1/expand-glob"
  }
}
