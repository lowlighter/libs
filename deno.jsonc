{
  "tasks": {
    "lint": {
      "description": "Lint code, documentation, package and formatting\n- `--check`: skip actual formatting (check only)",
      "command": "cd $INIT_CWD && deno lint && deno doc --lint **/mod.ts && deno publish --quiet --dry-run --allow-dirty && deno fmt"
    },
    "test": {
      "description": "Test code and print detailed coverage",
      "command": "cd $INIT_CWD && deno task --cwd=$INIT_CWD test:deno --doc --clean --coverage && deno coverage --detailed --include=$INIT_CWD --exclude='((\\.m?js)|(test\\.ts))$'"
    },

    "test:deno": {
      "description": "Test code (deno)",
      "command": "cd $INIT_CWD && deno test $(deno task flags)"
    },
    "test:node": {
      "description": "Test code (node)",
      "command": "cd $INIT_CWD && npx tsx --test *_test.ts"
    },
    "test:bun": {
      "description": "Test code (bun)",
      "command": "cd $INIT_CWD && bun test"
    },
    "bench": {
      "description": "Run benchmarks",
      "command": "cd $INIT_CWD && deno bench --allow-read --allow-write=bench || true"
    },
    "qa": {
      "description": "Test and lint code",
      "command": "deno task test && deno task lint"
    },
    "make:bump": {
      "description": "Bump package version",
      "command": "deno run --allow-read --allow-write=. .github/deno_bump.ts"
    },
    "make:readme": {
      "description": "Generate README.md",
      "command": "deno run --allow-env=LOG_LEVEL --allow-read=. --allow-write=README.md .github/deno_readme.ts && deno fmt README.md"
    },
    "make:coverage": {
      "description": "Generate html coverage",
      "command": "deno task test:deno --clean --coverage --fail-fast --reporter=dot && deno coverage --exclude=.js --html && sleep 1 && deno run --allow-read --allow-net=img.shields.io --allow-write=coverage jsr:@libs/bundle/ts/cli/coverage --root=coverage"
    },
    "jq": {
      "description": "Query in JSONC",
      "command": "deno run --allow-read .github/deno_config_parser.ts --cwd=$INIT_CWD"
    },
    "flags": {
      "description": "Compute permissions flags",
      "command": "deno run --allow-read .github/deno_flags.ts --cwd=$INIT_CWD"
    }
  },
  "unstable": [
    "kv"
  ],
  "nodeModulesDir":"auto",
  "fmt": {
    "semiColons": false,
    "lineWidth": 280,
    "proseWrap": "preserve",
    "exclude": [
      "**/node_modules",
      "**/coverage",
      "**/package.json",
      "**/package-lock.json",
      "**/wasm_*",
      "**/*.mjs"
    ]
  },
  "lint": {
    "rules": {
      "include": [
        "ban-untagged-todo",
        "eqeqeq",
        "no-console",
        "no-eval",
        "no-external-import",
        "no-inferrable-types",
        "no-sync-fn-in-async-fn",
        "no-throw-literal",
        "single-var-declarator",
        "triple-slash-reference"
      ]
    },
    "exclude": [
      "**/node_modules",
      "**/coverage",
      "**/wasm_*",
      "**/*.mjs"
    ]
  },
  "publish": {
    "exclude": [
      ".devcontainer/**",
      ".github/**",
      "**/*_test.ts",
      "CONTRIBUTING.md",
      "vercel.json"
    ]
  },
  "compilerOptions": {
    "useUnknownInCatchVariables": false
  }
}